apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nkoster-posts
  name: nkoster-posts
  namespace: nkoster
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nkoster-posts
  template:
    metadata:
      labels:
        app: nkoster-posts
    spec:
      containers:
      - name: nkoster-posts
        args:
        - npm
        - start
        image: registry.portavita.net/nkoster/ms1-posts
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /posts
            port: 4000
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /posts
            port: 4000
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nkoster-posts
  name: nkoster-posts
  namespace: nkoster
spec:
  ports:
  - name: nkoster-posts
    port: 80
    protocol: TCP
    targetPort: 4000
  selector:
    app: nkoster-posts
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx-private
  labels:
    app: nkoster-posts
  name: nkoster-posts
  namespace: nkoster
spec:
  rules:
  - host: nkoster.pvdev.portavita.net
    http:
      paths:
      - backend:
          serviceName: nkoster-posts
          servicePort: 80
        path: /posts
